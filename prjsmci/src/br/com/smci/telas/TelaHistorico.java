/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.smci.telas;

import java.sql.*;
import br.com.smci.dal.ModuloConexao;
import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 * Form that provides history of the fires that may have occurred in a client's ambient
 * @author julio
 * @version 1.0
 * @since SMCI 1.0
 */
public class TelaHistorico extends javax.swing.JInternalFrame {

    Connection conexao = null;
    //PreparedStatement e ResultSet são Frameworks do pacote java.sql
    PreparedStatement pst = null;
    ResultSet rs = null;
    DefaultTableModel dtm1;
    DefaultListModel lm1;
    
    /**
     * Creates new form TelaHistorico and sets HistList to the DefaultListModel
     */
    public TelaHistorico() {
        initComponents();
        
        //Cria modelo da lista
        lm1 = new DefaultListModel();
        HistList.setModel(lm1);
        
        conexao = ModuloConexao.conector();
    }
    
    /**
     * Method that searches the clients table for a match with txtHistPesquisar field
     * @since SMCI 1.0
     */
    private void ConsultarCliente() {
        String sql = "SELECT idcliente AS ID, nome AS Nome, data_nascimento AS Nascimento, cpf AS CPF, email AS Email, data_cadastro AS Inscrição FROM clientes WHERE nome LIKE ?";
        
        try {
            pst = conexao.prepareStatement(sql);
            //Passando o conteúdo da caixa de pesquisa para o ?
            //Detalhe para a "%" que vai ao final do comando
            pst.setString(1, "%" + txtHistPesquisar.getText() + "%");
            rs = pst.executeQuery();
            //A linha abaixo usa a biblioteca rs2xml para preencher a tabela tblClientes
            tblHistClientes.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    /**
     * Method that fill all the fields of the form when the user click on a tblHistClientes row
     * @since SMCI 1.0
     */
    private void preencheLista() {
        int selectedrow = tblHistClientes.getSelectedRow();

        String sql = "SELECT * FROM historico WHERE idcliente = ?";

        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, tblHistClientes.getModel().getValueAt(selectedrow, 0).toString());
            rs = pst.executeQuery();
            
            lm1.clear();

            while (rs.next()) {
                lm1.addElement("ID: " + rs.getString(1) + " | " + "Data e Hora: " + rs.getString(2) + " | "+ " Intensidade: " + rs.getString(9));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    /**
     * Method that searches if a client record matches with txtHistPesquisar field and if so then fill some fields with the information retrieved
     * @since SMCI 1.0
     */
    private void ConsultarHistorico() {
        Scanner sc2 = new Scanner(HistList.getSelectedValue()).useDelimiter("[^\\d]+");

        int id = sc2.nextInt();

        String sql = "SELECT * FROM historico WHERE idhistorico = ?";

        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, String.valueOf(id));
            rs = pst.executeQuery();

            if (rs.next()) {
                txtDataHr.setText(rs.getString(2));
                txtGps.setText(rs.getString(3));
                txtTemp.setText(rs.getString(4));
                txtHumid.setText(rs.getString(5));
                txtGas.setText(rs.getString(6));
                txtFlam.setText(rs.getString(7));
                txtBat.setText(rs.getString(8));
                txtInten.setText(rs.getString(9));
                txtIdArd.setText(rs.getString(10));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtHistPesquisar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistClientes = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        HistList = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtDataHr = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtGps = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTemp = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtHumid = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtGas = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtFlam = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtBat = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtInten = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtIdArd = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Histórico de Sinistros");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/smci/icones/report.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        txtHistPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHistPesquisarKeyReleased(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/smci/icones/Search.png"))); // NOI18N

        tblHistClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblHistClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHistClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHistClientes);

        jLabel2.setText("Lista de Ocorrências:");

        jScrollPane2.setBorder(null);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(350, 350));

        HistList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "ID: 1 | Data e Hora: 2016-12-13 03:20:52.0 | Intensidade: 4" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        HistList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        HistList.setOpaque(false);
        HistList.setVisibleRowCount(1);
        HistList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HistListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(HistList);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Data e Hora:");

        jLabel4.setText("Gps:");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/smci/icones/Termometro.png"))); // NOI18N
        jLabel5.setText("Temperatura:");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/smci/icones/drop.png"))); // NOI18N
        jLabel6.setText("Humidade:");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/smci/icones/co2.png"))); // NOI18N
        jLabel7.setText("Nível de Gás:");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/smci/icones/Chama.png"))); // NOI18N
        jLabel8.setText("Nível de Chamas:");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/smci/icones/Battery.png"))); // NOI18N
        jLabel9.setText("Tensão da Bateria:");

        jLabel10.setText("Intensidade:");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/smci/icones/Arduino.png"))); // NOI18N
        jLabel11.setText("Id:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel8))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtDataHr)
                                .addComponent(txtGps, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtGas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                    .addComponent(txtTemp, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHumid, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(26, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFlam)
                            .addComponent(txtBat)
                            .addComponent(txtInten)
                            .addComponent(txtIdArd, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDataHr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtGps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHumid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtGas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtFlam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtBat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtInten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtIdArd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtHistPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(txtHistPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        setBounds(0, 0, 1000, 675);
    }// </editor-fold>//GEN-END:initComponents

    private void tblHistClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHistClientesMouseClicked
        // TODO add your handling code here:
        preencheLista();
    }//GEN-LAST:event_tblHistClientesMouseClicked

    /**
     * Method that initializes the TableModels when the Internal Frame opens
     * @param evt ActionEvent provides information about the event
     * @since SMCI 1.0
     */
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        //Cria objeto do modelo da tabela
        dtm1 = new DefaultTableModel(0, 0);

        //Cria cabeçalho da tabela
        String header[] = new String[]{"ID", "Nome", "Nascimento", "CPF", "Email", "Inscrição"};

        //Adiciona cabeçalho na tabela   
        dtm1.setColumnIdentifiers(header);
        //set model into the table object
        tblHistClientes.setModel(dtm1);
    }//GEN-LAST:event_formInternalFrameOpened

    private void txtHistPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHistPesquisarKeyReleased
        // TODO add your handling code here:
        if (!txtHistPesquisar.getText().isEmpty()) {
            ConsultarCliente();
        } else {
            tblHistClientes.setModel(dtm1);
        }
    }//GEN-LAST:event_txtHistPesquisarKeyReleased

    private void HistListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HistListMouseClicked
        // TODO add your handling code here:
        ConsultarHistorico();
    }//GEN-LAST:event_HistListMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> HistList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblHistClientes;
    private javax.swing.JTextField txtBat;
    private javax.swing.JTextField txtDataHr;
    private javax.swing.JTextField txtFlam;
    private javax.swing.JTextField txtGas;
    private javax.swing.JTextField txtGps;
    private javax.swing.JTextField txtHistPesquisar;
    private javax.swing.JTextField txtHumid;
    private javax.swing.JTextField txtIdArd;
    private javax.swing.JTextField txtInten;
    private javax.swing.JTextField txtTemp;
    // End of variables declaration//GEN-END:variables
}
